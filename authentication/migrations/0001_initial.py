# Generated by Django 3.2.8 on 2021-10-25 09:00

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='UUID')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered.', regex='^\\+989\\d{9}$')])),
                ('code_expire', models.BigIntegerField(blank=True, default=0)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('fname', models.CharField(blank=True, max_length=30, null=True)),
                ('lname', models.CharField(blank=True, max_length=30, null=True)),
                ('avatar_img', models.ImageField(upload_to=None)),
                ('cover_img', models.ImageField(upload_to=None)),
                ('province', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('vip_expire', models.BigIntegerField(blank=True, default=0)),
                ('likes', models.BigIntegerField(blank=True, default=0)),
                ('rates', models.BigIntegerField(blank=True, default=0)),
                ('bookmarks', models.BigIntegerField(blank=True, default=0)),
                ('shares', models.BigIntegerField(blank=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
